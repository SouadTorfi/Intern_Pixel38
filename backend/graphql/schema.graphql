"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
#User

type User {
    id: ID
    first_name: String
    last_name: String
    email: String
    email_verified_at: DateTime
    password: String
    role: Role @hasMany
    created_at: DateTime
    updated_at: DateTime
}

type Role {
    id: ID
    name: String
    guard_name: String
    created_at: DateTime
    updated_at: DateTime
}

type Task {
    id: ID
    title: String
    in_progress: Boolean
    user: User
}

type Project {
    id: ID
    title: String
    description: String
    user: User
    created_at: DateTime
    updated_at: DateTime
}
type Query {
    #user
    user(id: ID! @eq): User @find
    users: [User!]! @all

    #task
    task(id: ID! @eq): Task @find
    tasks: [Task!]! @all

    #role
    role(id: ID! @eq): Role @find
    roles: [Role!]! @all

    #project
    project(id: ID! @eq): Project @find
    projects: [Project!]! @all
}

type Mutation {
    #user
    login(email: String!, password: String!): String!
        @field(resolver: "Login@__invoke")

    #CreateUser
    createUser(
        first_name: String!
        last_name: String!
        role_id: ID
        email: String! @rules(apply: ["email", "unique:users"])
        password: String! @hash @rules(apply: ["min:6"])
    ): User @create

    #Createproject
    createProject(title: String!, description: String!, user_id: ID): Project
        @create

    #CreateRole
    createRole(name: String!, guard_name: String): Role @create

    deleteUser(id: ID!): User @delete
    deleteProject(id: ID!): Project @delete
    deleteRole(id: ID!): Role @delete

    updateUser(id: ID!, first_name: String): User @update
    updateProject(id: ID!, title: String): User @update
    updateRole(id: ID!, title: String): Role @update
}
